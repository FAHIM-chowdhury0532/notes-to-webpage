<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Notes to Webpage</title>
    <style>
        .bg-gray-100 { background-color: #f3f4f6; }
        .flex { display: flex; }
        .flex-col { flex-direction: column; }
        .items-center { align-items: center; }
        .min-h-screen { min-height: 100vh; }
        .p-4 { padding: 1rem; }
        .w-full { width: 100%; }
        .max-w-2xl { max-width: 42rem; }
        .bg-white { background-color: #ffffff; }
        .rounded-lg { border-radius: 0.5rem; }
        .shadow-lg { box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); }
        .p-6 { padding: 1.5rem; }
        .text-2xl { font-size: 1.5rem; }
        .font-bold { font-weight: 700; }
        .mb-4 { margin-bottom: 1rem; }
        .text-center { text-align: center; }
        .block { display: block; }
        .text-sm { font-size: 0.875rem; }
        .font-medium { font-weight: 500; }
        .text-gray-700 { color: #374151; }
        .mt-1 { margin-top: 0.25rem; }
        .h-32 { height: 8rem; }
        .p-2 { padding: 0.5rem; }
        .border { border-width: 1px; }
        .rounded-md { border-radius: 0.375rem; }
        .mt-2 { margin-top: 0.5rem; }
        .flex-wrap { flex-wrap: wrap; }
        .gap-2 { gap: 0.5rem; }
        .h-16 { height: 4rem; }
        .h-10 { height: 2.5rem; }
        .p-1 { padding: 0.25rem; }
        .text-lg { font-size: 1.125rem; }
        .font-semibold { font-weight: 600; }
        .justify-between { justify-content: space-between; }
        .bg-blue-500 { background-color: #3b82f6; }
        .text-white { color: #ffffff; }
        .px-4 { padding-left: 1rem; padding-right: 1rem; }
        .py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }
        .hover\:bg-blue-600:hover { background-color: #2563eb; }
        .bg-green-500 { background-color: #22c55e; }
        .hover\:bg-green-600:hover { background-color: #16a34a; }
        .bg-purple-500 { background-color: #8b5cf6; }
        .hover\:bg-purple-600:hover { background-color: #7c3aed; }

        body {
            font-family: Arial, sans-serif;
        }
        #preview {
            border: 1px solid #ccc;
            min-height: 200px;
            padding: 10px;
            position: relative;
            background-size: cover;
            background-position: center;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            justify-content: flex-start;
        }
        .floating-window {
            position: absolute;
            border: 1px solid #000;
            background: rgba(255, 255, 255, 0.8);
            padding: 5px;
            cursor: move;
            z-index: 10;
        }
        .preview-image {
            max-width: 200px;
            margin: 10px 0;
        }
    </style>
</head>
<body class="bg-gray-100 flex flex-col items-center min-h-screen p-4">
    <div class="w-full max-w-2xl bg-white rounded-lg shadow-lg p-6">
        <h1 class="text-2xl font-bold mb-4 text-center">Notes to Webpage</h1>

        <div class="mb-4">
            <label for="notes" class="block text-sm font-medium text-gray-700">Your Notes</label>
            <textarea id="notes" class="mt-1 w-full h-32 p-2 border rounded-md" placeholder="Enter your notes here..."></textarea>
        </div>

        <div class="mb-4">
            <label for="images" class="block text-sm font-medium text-gray-700">Upload Images</label>
            <input type="file" id="images" class="mt-1 w-full p-2 border rounded-md" accept="image/*" multiple>
            <div id="image-preview" class="mt-2 flex flex-wrap gap-2"></div>
        </div>

        <div class="mb-4">
            <label for="bgImage" class="block text-sm font-medium text-gray-700">Upload Background Image</label>
            <input type="file" id="bgImage" class="mt-1 w-full p-2 border rounded-md" accept="image/*">
            <div id="bg-image-preview" class="mt-2">
                <img id="bg-image-preview-img" class="hidden max-w-100px" alt="Background Preview">
            </div>
        </div>

        <div class="mb-4">
            <label for="floatText" class="block text-sm font-medium text-gray-700">Floating Window Text</label>
            <textarea id="floatText" class="mt-1 w-full h-16 p-2 border rounded-md" placeholder="Text for floating window..."></textarea>
            <button onclick="addFloatingWindow()" class="mt-2 bg-purple-500 text-white px-4 py-2 rounded-md hover:bg-purple-600">Add Floating Window</button>
        </div>

        <div class="mb-4">
            <label for="font" class="block text-sm font-medium text-gray-700">Font</label>
            <select id="font" class="mt-1 w-full p-2 border rounded-md">
                <option value="Arial">Arial</option>
                <option value="Times New Roman">Times New Roman</option>
                <option value="Courier New">Courier New</option>
            </select>
        </div>
        <div class="mb-4">
            <label for="bgColor" class="block text-sm font-medium text-gray-700">Background Color</label>
            <input type="color" id="bgColor" class="mt-1 w-full h-10 p-1 border rounded-md" value="#ffffff">
        </div>
        <div class="mb-4">
            <label for="textColor" class="block text-sm font-medium text-gray-700">Text Color</label>
            <input type="color" id="textColor" class="mt-1 w-full h-10 p-1 border rounded-md" value="#000000">
        </div>

        <div class="mb-4">
            <h2 class="text-lg font-semibold">Preview</h2>
            <div id="preview" class="bg-white"></div>
        </div>

        <div class="flex justify-between">
            <button onclick="updatePreview()" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600">Update Preview</button>
            <button onclick="generateWebpage()" class="bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600">Download Webpage</button>
        </div>
    </div>

    <script>
        let uploadedImages = [];
        let floatingWindows = [];
        let bgImage = null;

        document.getElementById('images').addEventListener('change', (e) => {
            uploadedImages = Array.from(e.target.files);
            const imagePreview = document.getElementById('image-preview');
            imagePreview.innerHTML = '';
            uploadedImages.forEach((file) => {
                const img = document.createElement('img');
                img.src = URL.createObjectURL(file);
                img.className = 'preview-image';
                img.style.maxWidth = '100px';
                imagePreview.appendChild(img);
            });
        });

        document.getElementById('bgImage').addEventListener('change', (e) => {
            bgImage = e.target.files[0] || null;
            const bgPreviewImg = document.getElementById('bg-image-preview-img');
            if (bgImage) {
                bgPreviewImg.src = URL.createObjectURL(bgImage);
                bgPreviewImg.classList.remove('hidden');
                bgPreviewImg.style.maxWidth = '100px';
            } else {
                bgPreviewImg.classList.add('hidden');
                bgPreviewImg.src = '';
            }
        });

        function addFloatingWindow() {
            const text = document.getElementById('floatText').value;
            if (text.trim()) {
                floatingWindows.push({ text, x: 50 * (floatingWindows.length + 1), y: 50 * (floatingWindows.length + 1) });
                document.getElementById('floatText').value = '';
                updatePreview();
            }
        }

        function makeDraggable(element, index) {
            let pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
            element.onmousedown = dragMouseDown;

            function dragMouseDown(e) {
                e.preventDefault();
                pos3 = e.clientX;
                pos4 = e.clientY;
                document.onmouseup = closeDragElement;
                document.onmousemove = elementDrag;
            }

            function elementDrag(e) {
                e.preventDefault();
                pos1 = pos3 - e.clientX;
                pos2 = pos4 - e.clientY;
                pos3 = e.clientX;
                pos4 = e.clientY;
                element.style.top = (element.offsetTop - pos2) + 'px';
                element.style.left = (element.offsetLeft - pos1) + 'px';
                floatingWindows[index].x = element.offsetLeft - pos1;
                floatingWindows[index].y = element.offsetTop - pos2;
            }

            function closeDragElement() {
                document.onmouseup = null;
                document.onmousemove = null;
            }
        }

        function updatePreview() {
            const notes = document.getElementById('notes').value;
            const font = document.getElementById('font').value;
            const bgColor = document.getElementById('bgColor').value;
            const textColor = document.getElementById('textColor').value;

            const preview = document.getElementById('preview');
            preview.style.fontFamily = font;
            preview.style.color = textColor;
            preview.innerHTML = notes.replace(/\n/g, '<br>');

            if (bgImage) {
                preview.style.backgroundImage = `url(${URL.createObjectURL(bgImage)})`;
                preview.style.backgroundColor = '';
            } else {
                preview.style.backgroundImage = '';
                preview.style.backgroundColor = bgColor;
            }

            uploadedImages.forEach((file) => {
                const img = document.createElement('img');
                img.src = URL.createObjectURL(file);
                img.className = 'preview-image';
                preview.appendChild(img);
            });

            floatingWindows.forEach((win, index) => {
                const div = document.createElement('div');
                div.className = 'floating-window';
                div.style.top = win.y + 'px';
                div.style.left = win.x + 'px';
                div.innerText = win.text;
                preview.appendChild(div);
                makeDraggable(div, index);
            });
        }

        function generateWebpage() {
            alert('Download logic would go here.');
        }
    </script>
</body>
</html>
